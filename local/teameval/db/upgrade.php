<?php

function xmldb_local_teameval_upgrade($oldversion) {
    global $DB;
    $dbman = $DB->get_manager();

    /// Add a new column newcol to the mdl_myqtype_options
    if ($oldversion < 2015111800) {
        // Code to add the column, generated by the 'View PHP Code' option of the XMLDB editor.
        // Define field self to be added to teameval.
        $table = new xmldb_table('teameval');
        $field = new xmldb_field('self', XMLDB_TYPE_INTEGER, '2', null, XMLDB_NOTNULL, null, '1', 'public');

        // Conditionally launch add field self.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2015111800, 'local', 'teameval');
    }

    if ($oldversion < 2015120200) {

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2015120200, 'local', 'teameval');

    }

    if ($oldversion < 2015120700) {

        // Define table teameval_release to be created.
        $table = new xmldb_table('teameval_release');

        // Adding fields to table teameval_release.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('cmid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('level', XMLDB_TYPE_INTEGER, '2', null, XMLDB_NOTNULL, null, null);
        $table->add_field('target', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);

        // Adding keys to table teameval_release.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('combo', XMLDB_KEY_UNIQUE, array('cmid', 'level', 'target'));

        // Adding indexes to table teameval_release.
        $table->add_index('cmid', XMLDB_INDEX_NOTUNIQUE, array('cmid'));

        // Conditionally launch create table for teameval_release.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2015120700, 'local', 'teameval');
    }

    if ($oldversion < 2015120901) {

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2015120901, 'local', 'teameval');

    }

    if ($oldversion < 2016050500) {

        // Define field autorelease to be added to teameval.
        $table = new xmldb_table('teameval');
        $field = new xmldb_field('autorelease', XMLDB_TYPE_INTEGER, '2', null, null, null, '1', 'deadline');

        // Conditionally launch add field autorelease.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2016050500, 'local', 'teameval');
    }

    if ($oldversion < 2016051100) {

        // Define table teameval_rescind to be created.
        $table = new xmldb_table('teameval_rescind');

        // Adding fields to table teameval_rescind.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('questionid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('markerid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('targetid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('state', XMLDB_TYPE_INTEGER, '2', null, XMLDB_NOTNULL, null, '0');

        // Adding keys to table teameval_rescind.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

        // Adding indexes to table teameval_rescind.
        $table->add_index('target', XMLDB_INDEX_UNIQUE, array('questionid', 'markerid', 'targetid'));

        // Conditionally launch create table for teameval_rescind.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Teameval savepoint reached.
        upgrade_plugin_savepoint(true, 2016051100, 'local', 'teameval');
    }




    return true;
}
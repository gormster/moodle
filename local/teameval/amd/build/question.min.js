define(["jquery","core/fragment","core/notification","core/templates","core/ajax"],function(a,b,c,d,e){function f(a,b,c,d,e,f,g){this.teameval=b,this.questionID=f,this.container=a,this.contextid=c}return f.prototype.submissionView=function(){var a=this.submissionTemplate();if(a){var b=this.submissionContext(),c=d.render(a,b);return c.done(function(a,b){d.replaceNodeContents(this.container,a,b)}.bind(this))}},f.prototype.editingView=function(){var a=this.editingTemplate();if(a){var b=this.editingContext(),c=d.render(a,b);return c.done(function(a,b){d.replaceNodeContents(this.container,a,b)}.bind(this)),c}},f.prototype.save=function(a){},f.prototype["delete"]=function(){if(this.questionID&&this.pluginName){var b=e.call([{methodname:"teamevalquestion_"+this.pluginName+"_delete_question",args:{teamevalid:this.teameval,id:this.questionID}}]);return b[0]}return a.Deferred().resolve()},f.prototype.submit=function(a){},f.prototype.submissionTemplate=function(){return this.pluginName?"teamevalquestion_"+this.pluginName+"/submission_view":null},f.prototype.submissionContext=function(){return{}},f.prototype.editingTemplate=function(){return this.pluginName?"teamevalquestion_"+this.pluginName+"/editing_view":null},f.prototype.editingContext=function(){return{}},f.prototype.editForm=function(a,e,f){var g={form:a,jsonformdata:JSON.stringify(e),customdata:JSON.stringify(f)},h=b.loadFragment("local_teameval","ajaxform",this.contextid,g);return h.done(function(a,b){d.replaceNodeContents(this.container,a,b)}.bind(this)),h.fail(c.exception),h},f.prototype.submitForm=function(b,d,f){var g=this.validateData(b).then(function(){f.formdata=a(b).serialize();var c=e.call([{methodname:d,args:f}]);return c[0]}.bind(this));return g.fail(function(a){a&&a.errorcode&&c.exception(a)}.bind(this)),g},f.prototype.saveForm=function(b,c,d,e){var f={ordinalName:"ordinal",questionIDName:"id",methodname:"teamevalquestion_"+this.pluginName+"_update_question",args:{teamevalid:this.teameval},resolveWithID:!0},g=a.extend({},f,d);return a(b).find("[name="+g.ordinalName+"]").val(c),this.questionID&&a(b).find("[name="+g.questionIDName+"]").val(this.questionID),this.submitForm(b,g.methodname,g.args).then(function(a){return this.questionID=a.id,e&&e(a),g.resolveWithID?a.id:a}.bind(this))},f.prototype.validateData=function(b){return a.Deferred().resolve().promise()},f});